{"version":3,"sources":["components/CavenueForm/index.js","assets/logo.png","components/Home/index.js","components/Confirmation/index.js","assets/con.gif","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","form","display","flexDirection","padding","spacing","heading","marginTop","name","gridTemplateColumns","gridGap","inputField","width","formError","color","fontFamily","fontSize","submit","submitButton","SignupSchema","Yup","shape","firstName","min","max","required","lastName","email","whatsapp","matches","CavenueForm","classes","history","useHistory","initialValues","profile","validationSchema","onSubmit","values","axios","post","then","response","push","errors","touched","handleChange","className","Box","mb","fontWeight","letterSpacing","TextField","label","variant","type","onChange","value","error","helperText","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","Button","root","backgroundColor","height","mobile","minHeight","mForm","justifyContent","paddingBottom","mChildren","borderRadius","boxShadow","mLogoContainer","mLogo","browser","banner","formContainer","alignItems","maxWidth","logoContainer","logo","transform","Home","useState","isMobile","setIsMobile","handleWindowSizeChange","window","innerWidth","useEffect","addEventListener","src","alt","gifContainer","mSuccessGif","blueText","mSuccessText","textAlign","successText","GIF","App","path","exact","Confirmation","con","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d235b0.chunk.js","sourcesContent":["import { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  TextField,\n  Button,\n  Box,\n  InputLabel,\n  Select,\n  FormControl,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n  heading: {\n    marginTop: theme.spacing(1),\n  },\n  name: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gridGap: theme.spacing(2),\n  },\n  inputField: {\n    width: \"100%\",\n  },\n  formError: {\n    color: \"#ff0000\",\n    fontFamily: \"Roboto\",\n    fontSize: \"0.8rem\",\n  },\n  submit: {\n    width: \"100%\",\n  },\n  submitButton: {\n    width: \"100%\",\n  },\n}));\n\nconst url =\n  \"https://sheet.best/api/sheets/441dc814-9741-49e4-a2a0-90fda8a62234\";\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  whatsapp: Yup.string()\n    .required(\"Required\")\n    .matches(phoneRegExp, \"Phone number is not valid\")\n    .min(10, \"to short\")\n    .max(10, \"to long\"),\n});\n\nconst CavenueForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          whatsapp: \"\",\n          profile: \"\",\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values) => {\n          axios.post(url, values).then((response) => {\n            history.push(\"/success\");\n          });\n        }}\n      >\n        {({ errors, touched, values, handleChange }) => (\n          <Form className={classes.form}>\n            <Box\n              mb={3}\n              fontWeight={700}\n              letterSpacing={4}\n              className={classes.heading}\n            >\n              Register\n            </Box>\n            <Box mb={1} className={classes.name}>\n              <Box className={classes.inputField}>\n                <TextField\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  color=\"primary\"\n                  onChange={handleChange}\n                  value={values.firstName}\n                  className={classes.inputField}\n                  error={errors.firstName && touched.firstName}\n                  helperText={\n                    touched.firstName && errors.firstName\n                      ? errors.firstName\n                      : \" \"\n                  }\n                />\n              </Box>\n              <Box className={classes.inputField}>\n                <TextField\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  onChange={handleChange}\n                  value={values.lastName}\n                  className={classes.inputField}\n                  error={errors.lastName && touched.lastName}\n                  helperText={\n                    touched.lastName && errors.lastName ? errors.lastName : \" \"\n                  }\n                />\n              </Box>\n            </Box>\n            <Box mb={1} className={classes.inputField}>\n              <TextField\n                label=\"Email\"\n                variant=\"outlined\"\n                name=\"email\"\n                type=\"email\"\n                onChange={handleChange}\n                value={values.email}\n                className={classes.inputField}\n                error={errors.email && touched.email}\n                helperText={touched.email && errors.email ? errors.email : \" \"}\n              />\n            </Box>\n\n            <Box mb={1} className={classes.inputField}>\n              <TextField\n                label=\"Mobile no./Whatsapp no.\"\n                variant=\"outlined\"\n                name=\"whatsapp\"\n                type=\"whatsapp\"\n                onChange={handleChange}\n                value={values.whatsapp}\n                className={classes.inputField}\n                error={errors.whatsapp && touched.whatsapp}\n                helperText={\n                  touched.whatsapp && errors.whatsapp ? errors.whatsapp : \" \"\n                }\n              />\n            </Box>\n\n            <Box mb={4} className={classes.inputField}>\n              <FormControl\n                variant=\"outlined\"\n                className={`${classes.formControl} ${classes.inputField}`}\n              >\n                <InputLabel htmlFor=\"profile\">Profile</InputLabel>\n                <Select\n                  native\n                  value={values.profile}\n                  onChange={handleChange}\n                  className={classes.inputField}\n                  label=\"Profile\"\n                  inputProps={{\n                    name: \"profile\",\n                  }}\n                >\n                  <option value=\"\"></option>\n                  <option value=\"student\">Student</option>\n                  <option value=\"professional\">Professional</option>\n                </Select>\n              </FormControl>\n\n              {/* {errors.profile && touched.profile ? (\n                <div className={classes.formError}>{errors.profile}</div>\n              ) : null} */}\n            </Box>\n            <Box mb={1} className={classes.submit}>\n              <Button\n                variant=\"contained\"\n                // variant=\"outlined\"\n                type=\"submit\"\n                className={classes.submitButton}\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default CavenueForm;\n","export default __webpack_public_path__ + \"static/media/logo.de40d53d.png\";","import { useEffect, useState } from \"react\";\nimport CavenueForm from \"../../components/CavenueForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport logo from \"../../assets/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#1D1E21\",\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"grid\",\n    gridTemplateColumns: \"2fr 1fr\",\n  },\n  mobile: {\n    backgroundColor: \"#36473D\",\n    minHeight: \"100vh\",\n  },\n  mForm: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingBottom: theme.spacing(4),\n  },\n  mChildren: {\n    width: \"90%\",\n    backgroundColor: \"#fff\",\n    borderRadius: 6,\n    boxShadow: \"0px 1px 12px #111\",\n  },\n  mLogoContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    borderRadius: 6,\n  },\n  mLogo: {\n    width: 250,\n  },\n  browser: {\n    display: \"flex\",\n  },\n  banner: {\n    backgroundColor: \"#36473D\",\n    minHeight: \"100vh\",\n    width: \"40%\",\n  },\n  formContainer: {\n    width: \"60%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    maxWidth: 650,\n  },\n  logoContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  logo: {\n    width: \"120%\",\n    height: \"auto\",\n    transform: \"rotate(-90deg)\",\n  },\n}));\n\nconst Home = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  const handleWindowSizeChange = () => {\n    if (window.innerWidth < 500) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n  }, []);\n\n  window.addEventListener(\"resize\", handleWindowSizeChange);\n\n  const classes = useStyles();\n  if (isMobile) {\n    return (\n      <div className={classes.mobile}>\n        <Box className={classes.mLogoContainer}>\n          <img src={logo} alt=\"Brand Logo\" className={classes.mLogo} />\n        </Box>\n        <Box className={classes.mForm}>\n          <Box className={classes.mChildren}>\n            <CavenueForm />\n          </Box>\n        </Box>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.browser}>\n      <Box className={classes.banner}>\n        <Box className={classes.logoContainer}>\n          <img src={logo} alt=\"Brand Logo\" className={classes.logo} />\n        </Box>\n      </Box>\n      <Box className={classes.formContainer}>\n        <Box className={classes.form}>\n          <CavenueForm />\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  gifContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  mSuccessGif: {\n    width: \"60%\",\n  },\n  blueText: {\n    color: \"#3080e8\",\n    marginTop: theme.spacing(2),\n  },\n  mSuccessText: {\n    fontWeight: 700,\n    textAlign: \"center\",\n  },\n  successText: {\n    fontWeight: 800,\n    fontSize: \"1.4rem\",\n    textAlign: \"center\",\n  },\n}));\n\nconst Home = ({ GIF }) => {\n  const classes = useStyles();\n\n  const [isMobile, setIsMobile] = useState(false);\n  const handleWindowSizeChange = () => {\n    if (window.innerWidth < 500) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n  }, []);\n  window.addEventListener(\"resize\", handleWindowSizeChange);\n\n  return (\n    <div className={classes.gifContainer}>\n      <img\n        src={GIF}\n        alt=\"Confetti GIF\"\n        className={classes[isMobile ? \"mSuccessGif\" : \"successGif\"]}\n      />\n      <Box\n        className={`\n        ${classes[isMobile ? \"mSuccessText\" : \"successText\"]}\n        ${classes.blueText}\n        `}\n      >\n        Thank you for connecting\n        <br />\n        We will get back to you shortly!\n      </Box>\n    </div>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/con.f8dcfba4.gif\";","import \"./App.css\";\nimport Home from \"./components/Home\";\nimport Confirmation from \"./components/Confirmation\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport con from \"./assets/con.gif\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/success\" exact>\n          <Confirmation GIF={con} />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}